<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Synergy.WPF.Common.Controls"
                    xmlns:sidebar="clr-namespace:Synergy.WPF.Common.Controls.Sidebar"
                    xmlns:ntfGrid="clr-namespace:Synergy.WPF.Common.Controls.NotifyingGrid">
    
    <Style x:Key="NormalButtonStyle.Base" TargetType="{x:Type controls:NormalButton}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:NormalButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">

                        <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger 
                Property="IsMouseOver"
                Value="True">
                <Setter Property="Opacity" Value=".7"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".4" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="IsPressed" Value="False"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>

                <Setter Property="Opacity" Value="1" />
            </MultiTrigger>
            
            <Trigger
                Property="IsEnabled"
                Value="False">
                <Setter Property="Opacity" Value=".2" />
            </Trigger>


        </Style.Triggers>
    </Style>

    <Style x:Key="NormalButtonStyle" TargetType="controls:NormalButton"
           BasedOn="{StaticResource NormalButtonStyle.Base}">
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="44"/>

        <Setter Property="Foreground" Value="{DynamicResource NormalButton.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource NormalButton.Background}" />
    </Style>
    
    <Style x:Key="Sidebar" TargetType="sidebar:Sidebar">
        <Setter Property="Background" Value="{DynamicResource SidebarBackground}"/>
    </Style>

    <Style x:Key="FrameStyle" TargetType="Frame">
        <Setter Property="Background" Value="{DynamicResource FrameBackground}"/>
    </Style>

    <Style x:Key="ThemedNavItemStyle" BasedOn="{StaticResource NavItemStyle}" TargetType="sidebar:NavItem">
        <Setter Property="IconColor" Value="{DynamicResource SidebarItemColor}"/>
        <Setter Property="HoveredIconColor" Value="{DynamicResource SidebarSlcItemColor}"/>
        <Setter Property="SelectedIconColor" Value="{DynamicResource SidebarSlcItemColor}"/>
    </Style>

    <Style x:Key="NotifyingGridStyle" TargetType="ntfGrid:NotifyingGrid">
        <Setter Property="NtfBackground" Value="{DynamicResource NotifyingGrid.Background}"/>
        <Setter Property="NtfForeground" Value="{DynamicResource NotifyingGrid.Foreground}"/>
    </Style>

    <Style x:Key="ListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource ListView.Background}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="ListViewStyle.NormalButton" TargetType="controls:NormalButton"
           BasedOn="{StaticResource NormalButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{DynamicResource ListView.Background}"/>
        <Setter Property="MinHeight" Value="20"/>
    </Style>

    <Style x:Key="ListViewStyle.TextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Text.Foreground}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Text.Foreground}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource Text.Foreground}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="TextBoxStyle.Transparent" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource Text.Foreground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
</ResourceDictionary>